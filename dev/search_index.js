var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ExchangeOperations","category":"page"},{"location":"#ExchangeOperations","page":"Home","title":"ExchangeOperations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ExchangeOperations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ExchangeOperations]","category":"page"},{"location":"#ExchangeOperations.profit-Tuple{Number, Number, Number}","page":"Home","title":"ExchangeOperations.profit","text":"profit(a::Number, b::Number, q::Number) -> Any\n\n\nThis is a utility function to help calculate profit or loss.\n\n\n\n\n\n","category":"method"},{"location":"#ExchangeOperations.send!-Tuple{SimulatorSession, AbstractOperation}","page":"Home","title":"ExchangeOperations.send!","text":"send!(\n    x::SimulatorSession,\n    op::AbstractOperation\n) -> SimulatorSession\n\n\nThis is a catchall send method to warn about unimplemented simulator operations.\n\n\n\n\n\n","category":"method"},{"location":"#ExchangeOperations.send!-Tuple{SimulatorSession, SimulatorMarketBuy}","page":"Home","title":"ExchangeOperations.send!","text":"send!(\n    s::SimulatorSession,\n    buy::SimulatorMarketBuy\n) -> SimulatorSession\n\n\nSend a market buy order to the simulator.\n\n\n\n\n\n","category":"method"},{"location":"#ExchangeOperations.send!-Tuple{SimulatorSession, SimulatorMarketSell}","page":"Home","title":"ExchangeOperations.send!","text":"send!(\n    s::SimulatorSession,\n    sell::SimulatorMarketSell\n) -> SimulatorSession\n\n\nSend a market sell order to the simulator.\n\n\n\n\n\n","category":"method"},{"location":"#ExchangeOperations.update!-Tuple{SimulatorSession, Dates.DateTime, Float64}","page":"Home","title":"ExchangeOperations.update!","text":"update!(\n    s::SimulatorSession,\n    ts::Dates.DateTime,\n    next_price::Float64\n)\n\n\nUpdate the current time and current price of the asset in the simulator session. This also checks to see if stop orders should be triggered, and executes them if they should.\n\n\n\n\n\n","category":"method"}]
}
